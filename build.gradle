/*
 *  Copyright (c) 2023 Sergey Komlach aka Salat-Cx65; Original project: https://github.com/Salat-Cx65/AdvancedBiometricPromptCompat
 *  All rights reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '2.2.20'
    ext.minSDK = 23
    ext.compileSDK = 36
    ext.targetSDK = 35
    ext.javaVersion = JavaVersion.VERSION_17


    ext.libsMajorVersion = '2.3'
    ext.libsMinorVersion = 1
    ext.libsGroupId = "dev.skomlach"
    ext.libArtifactId_biometric = 'biometric'
    ext.libArtifactId_common = 'common'
    ext.libArtifactId_biometric_api = 'biometric-api'
    ext.libArtifactId_biometric_ktx = 'biometric-ktx'
    ext.libArtifactId_biometric_custom_face_tf = 'biometric-custom-face-tf'

    ext.libVersion = libsMajorVersion + "." + libsMinorVersion
    ext.libDesc = 'This is an Android project allowing you to use the advanced biometric authorization features.'
    ext.libLicenses = ['Apache-2.0']
    ext.libVCSUrl = 'https://github.com/Salat-Cx65/AdvancedBiometricPromptCompat.git'


    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.13.0'
        //Dev Tools
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:4.1.0"
        classpath "org.owasp:dependency-check-gradle:12.1.0"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.6'
        classpath 'com.google.gms:google-services:4.4.3'
        classpath 'de.undercouch:gradle-download-task:5.6.0'
    }
}

allprojects {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        google()

    }

    //DEV TOOLS
    apply plugin: 'project-report'
    apply plugin: "net.ltgt.errorprone"
    apply plugin: 'org.owasp.dependencycheck'

    dependencies {
        // Optional, some source of nullability annotations
        errorprone "com.google.errorprone:error_prone_core:2.42.0"
    }

//Tool for detect known vulnerabilities in 3-rd party libraries
    dependencyCheck {
        suppressionFile = "$rootProject.projectDir/owasp-suppress.xml"
        outputDirectory = "$rootProject.projectDir/owasp_report/"
        //by default the build will never fail
        failBuildOnCVSS = 11//do not fail if any vulnerability detected
    }

}

subprojects { project ->
    group = libsGroupId
    version = libVersion
    afterEvaluate {
        try {
            android.libraryVariants.all { v ->
//                v.assemble.finalizedBy(dependencyCheckAnalyze)
            }
        } catch (Exception ignore) {
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

apply plugin: 'io.codearte.nexus-staging'